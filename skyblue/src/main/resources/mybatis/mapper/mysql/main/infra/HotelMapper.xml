<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.color.infra.hotel.HotelDao">

	<resultMap type="com.color.infra.hotel.HotelDto" id="resultMapObj"></resultMap>

	<sql id="selectCommon">
		FROM
			hotel c
		LEFT JOIN rooms d
		ON c.hotelSeq = d.Hotel_seq
		WHERE 1=1
		<if test="shtelDelNy != null and !shtelDelNy.equals('')">AND hotel_delNy = #{shtelDelNy}</if>
		<if test="shtelUseNy != null and !shtelUseNy.equals('')">AND hotel_useNy = #{shtelUseNy}</if>
		<choose>
			<when test="shOptionDate == 1">AND c.hotelRgDate BETWEEN #{shDateStart} AND #{shDateEnd}</when>
			<when test="shOptionDate == 2">AND c.hotelEditDate BETWEEN #{shDateStart} AND #{shDateEnd}</when>
		</choose>
		<choose>
			<when test="shOption == 1">AND hotelSeq = #{shValue}</when>
			<when test="shOption == 2">AND hotelName LIKE CONCAT('%',#{shValue},'%')</when>
		</choose>
	</sql>
	
	<select id="selectOneCount" resultType="Integer">
		SELECT COUNT(*)
		<include refid="selectCommon"/>
	</select>
	
	<select id="hotelList" resultMap="resultMapObj">
		select aa.* from (
		SELECT
			c.hotelSeq,
		    c.hotelName,
		    c.hotelZipCode,
		    c.hotelAddress1,
		    c.hotelAddress2,
		    c.site,
		    c.stars,
		    c.swimmingPoolNy,
		    c.fitnessCenterNy,
		    c.roomServiceNy,
		    c.spaNy,
		    c.wifiNy,
		    c.parkingNy,
		    c.hvacNy,
		    c.smokingAreaNy,
		    c.petsNy,
		    c.hotel_delNy,
		    c.hotel_useNy,
		    c.hotelDesc,
		    c.hotelRgDate,
		    c.hotelEditDate,
		    d.roomType,
    		d.price,
    		d.status,
    		d.Hotel_seq
		<include refid="selectCommon"/>
		ORDER BY
			c.hotelSeq DESC
		) aa
		limit #{rowNumToShow} offset #{startRnumForMysql}
	</select>
	
	<insert id="hotelInsert">
		INSERT INTO hotel (
		    hotelName,
		    hotelZipCode,
    		hotelAddress1,
    		hotelAddress2,
		    site,
		    stars,
		    swimmingPoolNy,
		    fitnessCenterNy,
		    roomServiceNy,
		    spaNy,
		    wifiNy,
		    parkingNy,
		    hvacNy,
		    smokingAreaNy,
		    petsNy,
		    hotel_delNy,
		    hotel_useNy,
		    hotelDesc,
		    hotelRgDate,
		    hotelEditDate
		)
		VALUES (
			#{hotelName},
		    #{hotelZipCode},
		    #{hotelAddress1},
		    #{hotelAddress2},
		    #{site},
		    #{stars},
		    #{swimmingPoolNy},
		    #{fitnessCenterNy},
		    #{roomServiceNy},
		    #{spaNy},
		    #{wifiNy},
		    #{parkingNy},
		    #{hvacNy},
		    #{smokingAreaNy},
		    #{petsNy},
		    0,
		    #{hotel_useNy},
		    #{hotelDesc},
		    now(),
		    now()
		)
		<selectKey resultType="String" keyProperty="hotelSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<select id="selectOne" resultMap="resultMapObj">
		SELECT
			c.hotelSeq,
		    c.hotelName,
		    c.hotelZipCode,
		    c.hotelAddress1,
		    c.hotelAddress2,
		    c.site,
		    c.stars,
		    c.swimmingPoolNy,
		    c.fitnessCenterNy,
		    c.roomServiceNy,
		    c.spaNy,
		    c.wifiNy,
		    c.parkingNy,
		    c.hvacNy,
		    c.smokingAreaNy,
		    c.petsNy,
		    c.hotel_delNy,
		    c.hotel_useNy,
		    c.hotelDesc,
		    c.hotelRgDate,
		    c.hotelEditDate
		FROM
			hotel c
		WHERE 1=1
			AND c.hotelSeq = #{hotelSeq}
	</select>
	
	<update id="hotelUpdate">
		UPDATE hotel
		SET
			hotelName = #{hotelName},
		    hotelZipCode = #{hotelZipCode},
		    hotelAddress1 = #{hotelAddress1},
		    hotelAddress2 = #{hotelAddress2},
		    site = #{site},
		    stars = #{stars},
		    swimmingPoolNy = #{swimmingPoolNy},
		    fitnessCenterNy = #{fitnessCenterNy},
		    roomServiceNy = #{roomServiceNy},
		    spaNy = #{spaNy},
		    wifiNy = #{wifiNy},
		    parkingNy = #{parkingNy},
		    hvacNy = #{hvacNy},
		    smokingAreaNy = #{smokingAreaNy},
		    petsNy = #{petsNy},
		    hotel_delNy = #{hotel_delNy},
		    hotel_useNy = #{hotel_useNy},
		    hotelDesc = #{hotelDesc},
    		hotelEditDate = now()
    	WHERE 1=1
    		AND hotelSeq = #{hotelSeq}
	</update>
	
	<update id="hotelUelete">
		UPDATE hotel
		SET
			hotel_delNy = 1
		WHERE 1=1
			AND hotelSeq = #{hotelSeq}
	</update>
	
	<delete id="hotelDelete">
		DELETE FROM hotel
		WHERE 1=1
			AND hotelSeq = #{hotelSeq}
	</delete>
	
	<!-- HotelDeList -->
	<select id="HotelDeList" resultMap="resultMapObj">
		SELECT
			c.hotelSeq,
		    c.hotelName,
		    c.hotelZipCode,
		    c.hotelAddress1,
		    c.hotelAddress2,
		    c.site,
		    c.stars,
		    c.swimmingPoolNy,
		    c.fitnessCenterNy,
		    c.roomServiceNy,
		    c.spaNy,
		    c.wifiNy,
		    c.parkingNy,
		    c.hvacNy,
		    c.smokingAreaNy,
		    c.petsNy,
		    c.hotel_delNy,
		    c.hotel_useNy,
		    c.hotelDesc,
		    c.hotelRgDate,
		    c.hotelEditDate,
		    d.roomType,
    		d.price,
    		d.status,
    		d.Hotel_seq,
    		g.minPrice
		FROM
			hotel c
		LEFT JOIN rooms d
			ON c.hotelSeq = d.Hotel_seq
		LEFT JOIN
			(SELECT 
		      Hotel_seq, MIN(price) AS minPrice
			FROM  
		      rooms
		   GROUP BY Hotel_seq
		   ) as g
			ON c.hotelSeq = g.Hotel_seq
<!--     	FROM -->
<!--     		hotel c -->
<!-- 		LEFT JOIN rooms d -->
<!-- 			ON c.hotelSeq = d.Hotel_seq -->
		WHERE 1=1
			AND c.hotelSeq = #{hotelSeq}
<!-- 		ORDER BY -->
<!-- 			d.price desc -->
	</select>
	
	<!-- HotelDeListOne -->
	<select id="HotelDeListOne" resultMap="resultMapObj">
		SELECT
			c.hotelSeq,
		    c.hotelName,
		    c.hotelZipCode,
		    c.hotelAddress1,
		    c.hotelAddress2,
		    c.site,
		    c.stars,
		    c.swimmingPoolNy,
		    c.fitnessCenterNy,
		    c.roomServiceNy,
		    c.spaNy,
		    c.wifiNy,
		    c.parkingNy,
		    c.hvacNy,
		    c.smokingAreaNy,
		    c.petsNy,
		    c.hotel_delNy,
		    c.hotel_useNy,
		    c.hotelDesc,
		    c.hotelRgDate,
		    c.hotelEditDate,
		    d.roomType,
    		d.price,
    		d.status,
    		d.Hotel_seq,
    		g.minPrice
		FROM
			hotel c
		LEFT JOIN rooms d
			ON c.hotelSeq = d.Hotel_seq
		LEFT JOIN
			(SELECT 
		      Hotel_seq, MIN(price) AS minPrice
			FROM  
		      rooms
		   GROUP BY Hotel_seq
		   ) as g
			ON c.hotelSeq = g.Hotel_seq
		WHERE 1=1
			AND c.hotelSeq = #{hotelSeq}
	</select>
	
	<!-- reviews -->
	<select id="ReviewSelectList" resultMap="resultMapObj">
		SELECT
			c.hotelSeq,
			c.hotelName,
		    d.customerName,
		    f.reStars,
		    f.reTitle,
		    f.reDesc,
		    f.reDelNy,
		    f.reRegDate,
		    f.reEditDate,
		    f.Customer_seq,
		    f.Hotel_seq
		FROM reviews f
		LEFT JOIN hotel c
			ON f.Hotel_seq = c.hotelSeq
		LEFT JOIN customer d
			ON f.Customer_seq = d.customerSeq
	</select>
	
	<!-- upload files -->
	<insert id="insertUploaded">
		INSERT INTO CustomerUploaded (
			upType,
		    upDefaultNy,
		    upSort,
		    upPath,
		    upOriginalName,
		    upUuidName,
		    upExt,
		    upSize,
		    upDelNy,
		    upCusSeq,
		    upRegIp,
		    upRegSeq,
		    upRegDeviceCd,
		    upRegDateTime,
		    upRegDateTimeSvr
		) VALUES (
			#{upType},
		    #{upDefaultNy},
		    #{upSort},
		    #{upPath},
		    #{upOriginalName},
		    #{upUuidName},
		    #{upExt},
		    #{upSize},
		    0,
		    7,
		    #{upRegIp},
		    #{upRegSeq},
		    #{upRegDeviceCd},
		    #{upRegDateTime},
		    #{upRegDateTimeSvr}
		)
	</insert>
	
</mapper>