<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.color.infra.customer.CustomerDao">

	<resultMap type="com.color.infra.customer.CustomerDto" id="resultMapObj"></resultMap>
	
	<sql id="selectCommon">
		FROM
			customer d
		WHERE 1=1
		<if test="shcustomer_delNy != null and !shcustomer_delNy.equals('')">AND customer_delNy = #{shcustomer_delNy}</if>
		<if test="shcustomer_useNy != null and !shcustomer_useNy.equals('')">AND customer_useNy = #{shcustomer_useNy}</if>
		<if test="shregisterAgreeContentNy != null and !shregisterAgreeContentNy.equals('')">AND registerAgreeContentNy = #{shregisterAgreeContentNy}</if>		
		<if test="shgender != null and !shgender.equals('')">AND gender = #{shgender}</if>
		<choose>
			<when test="shOption == 1">AND customerSeq = #{shValue}</when>
			<when test="shOption == 2">AND customerName LIKE CONCAT('%',#{shValue},'%')</when>
			<when test="shOption == 3">AND birthDate LIKE CONCAT('%',#{shValue},'%')</when>
			<when test="shOption == 4">AND phoneNumber LIKE CONCAT('%',#{shValue},'%')</when>
			<when test="shOption == 5">AND email LIKE CONCAT('%',#{shValue},'%')</when>
			<when test="shOption == 6">AND id LIKE CONCAT('%',#{shValue},'%')</when>
			<when test="shOption == 7">AND customerAddress1 LIKE CONCAT('%',#{shValue},'%')</when>
		</choose>
		<choose>
			<when test="shOptionDate == 1">AND d.customerRgDate BETWEEN #{shDateStart} AND #{shDateEnd}</when>
			<when test="shOptionDate == 2">AND d.customerEditDate BETWEEN #{shDateStart} AND #{shDateEnd}</when>
		</choose>
	</sql>
	
	<select id="selectOneCount" resultType="Integer">
		SELECT COUNT(*)
		<include refid="selectCommon"/>
	</select>
	
	<select id="customerList" resultMap="resultMapObj">
		select aa.* from (
		SELECT
			d.customerSeq,
		    d.customerName,
		    d.gender,
		    d.birthDate,
		    d.email,
		    d.phoneNumber,
		    d.id,
		    d.password,
		    d.customerZipCode,
		    d.customerAddress1,
		    d.customerAddress2,
		    d.registerAgreeContentNy,
		    d.customer_delNy,
		    d.customer_useNy,
		    d.customerDesc,
		    d.customerRgDate,
		    d.customerEditDate
		<include refid="selectCommon"/>
		ORDER BY
			d.customerSeq DESC
			) aa
		limit #{rowNumToShow} offset #{startRnumForMysql}
	</select>
	
	<!-- 로그인 -->
	<select id="LoginselectOne" resultMap="resultMapObj">
		SELECT
			d.customerSeq,
			d.id,
		    d.password
		FROM
			customer d
		WHERE 1=1
			AND d.id = #{id}
<!-- 			AND d.password = #{password} -->
	</select>
	
	<!-- 로그인 세션 유지 -->
	<select id="selectOneId" resultMap="resultMapObj">
		SELECT
			d.customerSeq,
			d.id,
		    d.customerName
		FROM
			customer d
		WHERE 1=1
			AND d.id = #{id}
	</select>
	
	<insert id="customerIns">
		INSERT INTO customer (
		    customerName,
		    gender,
		    birthDate,
		    email,
		    phoneNumber,
		    id,
		    password,
			customerZipCode,
		    customerAddress1,
		    customerAddress2,
		    registerAgreeContentNy,
		    customer_delNy,
		    customer_useNy,
		    customerDesc,
		    customerRgDate,
		    customerEditDate
		)
		VALUES (
		    #{customerName},
		    #{gender},
		    #{birthDate},
		    #{email},
		    #{phoneNumber},
		    #{id},
		    #{password},
		    #{customerZipCode},
		    #{customerAddress1},
		    #{customerAddress2},
		    #{registerAgreeContentNy},
		    0,
		    #{customer_useNy},
		    #{customerDesc},
		    now(),
		    now()
		)
		<selectKey resultType="String" keyProperty="customerSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<select id="selectOne" resultMap="resultMapObj">
		SELECT
			d.customerSeq,
		    d.customerName,
		    d.gender,
		    d.birthDate,
		    d.email,
		    d.phoneNumber,
		    d.id,
		    d.password,
		    d.customerZipCode,
		    d.customerAddress1,
		    d.customerAddress2,
		    d.registerAgreeContentNy,
		    d.customer_delNy,
		    d.customer_useNy,
		    d.customerDesc,
		    d.customerRgDate,
		    d.customerEditDate
		FROM
			customer d
		WHERE 1=1
			AND d.customerSeq = #{customerSeq}
	</select>
	
	<update id="customerUpdt">
		UPDATE customer
		SET
			customerName = #{customerName},
		    gender = #{gender},
		    birthDate = #{birthDate},
		    email = #{email},
		    phoneNumber = #{phoneNumber},
		    id = #{id},
		    password = #{password},
		    customerZipCode = #{customerZipCode},
		    customerAddress1 = #{customerAddress1},
		    customerAddress2 = #{customerAddress2},
		    registerAgreeContentNy = #{registerAgreeContentNy},
		    customer_delNy = #{customer_delNy},
		    customer_useNy = #{customer_useNy},
		    customerDesc = #{customerDesc},
		    customerEditDate = now()
		WHERE 1=1
			AND customerSeq = #{customerSeq}
	</update>
	
	<update id="customerUel">
		UPDATE customer
		SET
			customer_delNy = 1
		WHERE 1=1
			AND customerSeq = #{customerSeq}
	</update>
	
	<delete id="customerDel">
		DELETE FROM customer
		WHERE 1=1
			AND customerSeq = #{customerSeq}
	</delete>
</mapper>